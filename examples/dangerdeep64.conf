dangerdeep

# Danger from the Deep 0.4.0+git.1483314290.aec5b6c-lp150.2.1,
# openSUSE Leap 15.0, 64 bit, PIE

# +1 Trainer: unlimited torpedos with immediate reloading
#
# C++ vector modification by pointer following from single dynamic memory object

game_params --nofullscreen


# Only refill empty torpedo tubes
define TSTATUS_CHECK check this i32 e 0

# Torpedo C++ vector - refill all four torpedo tubes
# The size of struct stored_torpedo is 112 (0x70) bytes.
# The size of the vector is known from end ptr - start ptr.

ptrmemstart TorpedoVec 1568

# Torpedo status: 0: empty, 1: reloading, 2: unloading, 3: loaded
TStatus1 0xc8 i32 3 1,0 a
TSTATUS_CHECK
TStatus2 prev+0x70 i32 3 1,0 a
TSTATUS_CHECK
TStatus3 prev+0x70 i32 3 1,0 a
TSTATUS_CHECK
TStatus4 prev+0x70 i32 3 1,0 a
TSTATUS_CHECK

ptrmemend


# The own submarine can be found by the throttle status.
# I've discovered this with the VIIc submarine.

# Couldn't find any torpedo status in this object.
# So looked for C++ vectors on the heap in this object.

dynmemstart Submarine 2032 0x7a39a 0x8

# 0: stop, -1: flank, -2: full, -3: half, -4: slow, -6: listen,
# -7: reverse-slow, -8: reverse-half, -9: reverse-full
ThrottleStatus 0x33c i32 watch

# Torpedo C++ vector start pointer
TorpedoVecPtr 0x588 p TorpedoVec always
check this p e heap
check this+8 p e heap

dynmemend


# Adaptation
adapt_script adapt/dangerdeep_adapt64.sh
adapt_required 1


# real variable names from src/submarine.h or src/ship.h:
# ThrottleStatus: ship::throttle_status
# TorpedoVecPtr: std::vector<stored_torpedo> submarine::torpedoes
