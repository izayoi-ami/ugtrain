language: cpp
sudo: required
dist: bionic

services:
  - docker

env:
  global:
  # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
  #   via the "travis encrypt" command using the project repo's public key
  - secure: UgoWZDJPOrFmjDxW+RwUkGU5tPZJwA7K2is7fm7OPkVRfu6qLSit+tIGV2JEkOvubwT/JxsEPOg3ViV6oVFKIgl7svE5NoWDAfVeo7LN1537sVvfP79LfqcfFdiGubj4Lu1uudIK5upFC7IHRrcDcJJWztdqr+8mmJXx7Nr4qjBYqxgAIjq1ibrJpDxDLV+Hukl2GExxwEYccoEXmaKsjpQ3mAds8Jt2D8TnsuUmbGbokwyZcGZGgYoqFLyKlSbfixxoy84KZY5zOeRS6tyaQeXg0bn61lXLaeSECx4zDd0qFPNJPdlMnLphRy2F7HpQls0R4sNCd4/bjCQd0c4LLyagqmfnp09rdFb+TnrLGa8VBfBbOKJVerp98oUXUdx8ZI9iIZGQJwabvhdjhzlHN8fGeqIuI2sKNpE9grw2FGlzUA3t8ynL5jGsBNILd8S9/TNzcewrRRUKTZdCIZm3wSIHTSj9B+6Fq4Y/1wNJ4KjIWEk5WxAaD4YUgqvHsW2in948WvRRuncNQlj7Y8NQwRqzTROTz7X1V1WkRUYzo69g4HOUopvl4VbcgOk2IXB7YzOeSRiFJ4SRCQO6xC/2eX10x2vVI7UMEIelmr06a73wBdcR8cqRL1/rw51qoKQWwyoxoZdypfAMm/i9zZHWe2F8nJ8tzuAF/MkwMxbh9qE=
  # Docker Ubuntu distribution and project directory in Docker container
  - DUDIST="bionic"
  - DPRJDIR="/ugtrain"
  - DEXEC="docker exec ${DUDIST} /bin/bash -c"

before_install:
  - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-

addons:
  apt:
    packages:
    - gcc g++ binutils
  # Coverity scan add-on, fires only when pushing to the `coverity_scan` branch
  coverity_scan:
    project:
      name: "ugtrain"
      description: "Build submitted via Travis CI"
    notification_email: s.parschauer@gmx.de
    build_command_prepend: "./autogen.sh && ./configure"
    build_command: "make"
    branch_pattern: coverity_scan

script:
  - if [ "${COVERITY_SCAN_BRANCH}" == 1 ]; then exit ; fi
  - docker pull ubuntu:${DUDIST}
  # mount the project git directory to the container and
  # use it as working directory
  - docker run -t -d --name="${DUDIST}" -v ${TRAVIS_BUILD_DIR}:${DPRJDIR} -w ${DPRJDIR} ubuntu:${DUDIST} /bin/bash
  - docker ps
  - ${DEXEC} "apt-get update && apt-get upgrade -y"
  - ${DEXEC} "apt-get install -y git gcc g++ binutils autoconf automake libtool pkg-config make"
  - ${DEXEC} "g++ --version"
  - ${DEXEC} "./autogen.sh && ./configure"
  - ${DEXEC} "make CFLAGS='-O2 -fsanitize=address,undefined'"
